/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d8438038062000d84833981810160405281019062000037919062000416565b6200005367e56e72f385e3d16e60c01b620000f760201b60201c565b6200006f67ef77875ed9d40b6460c01b620000f760201b60201c565b6200008b6726a8ac7ff98edef460c01b620000f760201b60201c565b620000bb60405180606001604052806022815260200162000d626022913982620000fa60201b6200025a1760201c565b620000d767f3b4d55f5109c3eb60c01b620000f760201b60201c565b8060009080519060200190620000ef929190620001c9565b505062000564565b50565b6200019c828260405160240162000113929190620004c4565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050620001a060201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b828054620001d7906200052e565b90600052602060002090601f016020900481019282620001fb576000855562000247565b82601f106200021657805160ff191683800117855562000247565b8280016001018555821562000247579182015b828111156200024657825182559160200191906001019062000229565b5b5090506200025691906200025a565b5090565b5b80821115620002755760008160009055506001016200025b565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002e28262000297565b810181811067ffffffffffffffff82111715620003045762000303620002a8565b5b80604052505050565b60006200031962000279565b9050620003278282620002d7565b919050565b600067ffffffffffffffff8211156200034a5762000349620002a8565b5b620003558262000297565b9050602081019050919050565b60005b838110156200038257808201518184015260208101905062000365565b8381111562000392576000848401525b50505050565b6000620003af620003a9846200032c565b6200030d565b905082815260208101848484011115620003ce57620003cd62000292565b5b620003db84828562000362565b509392505050565b600082601f830112620003fb57620003fa6200028d565b5b81516200040d84826020860162000398565b91505092915050565b6000602082840312156200042f576200042e62000283565b5b600082015167ffffffffffffffff81111562000450576200044f62000288565b5b6200045e84828501620003e3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000620004908262000467565b6200049c818562000472565b9350620004ae81856020860162000362565b620004b98162000297565b840191505092915050565b60006040820190508181036000830152620004e0818562000483565b90508181036020830152620004f6818462000483565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200054757607f821691505b602082108114156200055e576200055d620004ff565b5b50919050565b6107ee80620005746000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a41368621461003b578063cfae321714610057575b600080fd5b610055600480360381019061005091906105be565b610075565b005b61005f61018c565b60405161006c919061068f565b60405180910390f35b61008967fe296dfd6c6bedc760c01b6102f6565b61009d678d4403e1cb14245f60c01b6102f6565b6100b167b434a09210fec19f60c01b6102f6565b61015e60405180606001604052806023815260200161079660239139600080546100da906106e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610106906106e0565b80156101535780601f1061012857610100808354040283529160200191610153565b820191906000526020600020905b81548152906001019060200180831161013657829003601f168201915b5050505050836102f9565b61017267a4d42a901efab7d060c01b6102f6565b80600090805190602001906101889291906103c1565b5050565b60606101a26722294300eea8b90160c01b6102f6565b6101b66740706961a4e44c7160c01b6102f6565b6101ca673f83417153725a6060c01b6102f6565b600080546101d7906106e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610203906106e0565b80156102505780601f1061022557610100808354040283529160200191610250565b820191906000526020600020905b81548152906001019060200180831161023357829003601f168201915b5050505050905090565b6102f28282604051602401610270929190610712565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610398565b5050565b50565b61039383838360405160240161031193929190610749565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610398565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546103cd906106e0565b90600052602060002090601f0160209004810192826103ef5760008555610436565b82601f1061040857805160ff1916838001178555610436565b82800160010185558215610436579182015b8281111561043557825182559160200191906001019061041a565b5b5090506104439190610447565b5090565b5b80821115610460576000816000905550600101610448565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104cb82610482565b810181811067ffffffffffffffff821117156104ea576104e9610493565b5b80604052505050565b60006104fd610464565b905061050982826104c2565b919050565b600067ffffffffffffffff82111561052957610528610493565b5b61053282610482565b9050602081019050919050565b82818337600083830152505050565b600061056161055c8461050e565b6104f3565b90508281526020810184848401111561057d5761057c61047d565b5b61058884828561053f565b509392505050565b600082601f8301126105a5576105a4610478565b5b81356105b584826020860161054e565b91505092915050565b6000602082840312156105d4576105d361046e565b5b600082013567ffffffffffffffff8111156105f2576105f1610473565b5b6105fe84828501610590565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610641578082015181840152602081019050610626565b83811115610650576000848401525b50505050565b600061066182610607565b61066b8185610612565b935061067b818560208601610623565b61068481610482565b840191505092915050565b600060208201905081810360008301526106a98184610656565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106f857607f821691505b6020821081141561070c5761070b6106b1565b5b50919050565b6000604082019050818103600083015261072c8185610656565b905081810360208301526107408184610656565b90509392505050565b600060608201905081810360008301526107638186610656565b905081810360208301526107778185610656565b9050818103604083015261078b8184610656565b905094935050505056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a26469706673582212207dfbef7c40fdb73a3b086e3616a7a93e784dd834c57c00a07df90f02fb8da99f64736f6c634300080900334465706c6f79696e67206120477265657465722077697468206772656574696e673a";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _greeting: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  override getDeployTransaction(
    _greeting: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  override attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  override connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
